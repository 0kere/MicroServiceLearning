package com.j.s.galley.program;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.annotation.Id;
import org.springframework.stereotype.Repository;

import javax.annotation.processing.Generated;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Table;
import java.util.Optional;

//DB Actor Class
@Qualifier("actors")
@Repository
@Entity
@Table(name="actor")
public class Actor implements IActorRepository{
    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    int id; //no need to be in the constructor because it is a pk and is autogenerated
    String first_name;
    String last_name;
    public Actor(String first_name, String last_name)
    {
        this.first_name = first_name;
        this.last_name = last_name;
    }
    //special constructor
    public Actor(){}

    @Override
    public <S extends Actor> S save(S entity) {
        return null;
    }

    @Override
    public <S extends Actor> Iterable<S> saveAll(Iterable<S> entities) {
        return null;
    }

    @Override
    public Optional<Actor> findById(Integer integer) {
        return Optional.empty();
    }

    @Override
    public boolean existsById(Integer integer) {
        return false;
    }

    @Override
    public Iterable<Actor> findAll() {
        return null;
    }

    @Override
    public Iterable<Actor> findAllById(Iterable<Integer> integers) {
        return null;
    }

    @Override
    public long count() {
        return 0;
    }

    @Override
    public void deleteById(Integer integer) {

    }

    @Override
    public void delete(Actor entity) {

    }

    @Override
    public void deleteAllById(Iterable<? extends Integer> integers) {

    }

    @Override
    public void deleteAll(Iterable<? extends Actor> entities) {

    }

    @Override
    public void deleteAll() {

    }
}
